"use strict";(self.webpackChunkboxer=self.webpackChunkboxer||[]).push([[145],{6970:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"requirements-and-inception/usability-requirements","title":"Usability requirements","description":"| Task | Success condition | Failure condition | Potential cause | Notes & Consideration |","source":"@site/docs/requirements-and-inception/usability-requirements.md","sourceDirName":"requirements-and-inception","slug":"/requirements-and-inception/usability-requirements","permalink":"/docs/requirements-and-inception/usability-requirements","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/requirements-and-inception/usability-requirements.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"User stories","permalink":"/docs/requirements-and-inception/user-stories"},"next":{"title":"Non functional requirements","permalink":"/docs/requirements-and-inception/nonfunctional-requirements"}}');var r=i(4848),s=i(8453);const o={sidebar_position:2},d="Usability requirements",a={},c=[];function l(e){const t={em:"em",h1:"h1",header:"header",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"usability-requirements",children:"Usability requirements"})}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Task"}),(0,r.jsx)(t.th,{children:"Success condition"}),(0,r.jsx)(t.th,{children:"Failure condition"}),(0,r.jsx)(t.th,{children:"Potential cause"}),(0,r.jsx)(t.th,{children:"Notes & Consideration"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Log in to MedPantry"}),(0,r.jsx)(t.td,{children:"User is successfully logged in to the webpage using given account and password from admin and gets directed to dashboard."}),(0,r.jsx)(t.td,{children:"User able to log in with wrong/random credentials. User unable to log in with valid credentials."}),(0,r.jsx)(t.td,{children:"Server being down. Credentials does not exist in database. Error in database"}),(0,r.jsx)(t.td,{children:"Failure will prompt the user to retry login"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Dashboard display"}),(0,r.jsx)(t.td,{children:"Dashboard loads, showing relevant options (e.g., orders, number of free BaxterBoxes, stock updates)"}),(0,r.jsx)(t.td,{children:"Dashboard fails to load or displays incorrect information"}),(0,r.jsx)(t.td,{children:"Database error. Front end display error."}),(0,r.jsx)(t.td,{children:"Dashboard should be customisable based on user roles (e.g., manager, volunteer) i.e., adjust visibility based on roles."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Add items to a container"}),(0,r.jsx)(t.td,{children:"The correct container is recommended for the incoming items. The quantity of items stocked is inputted into the system. The Shopify is updated to reflect the relavant updates"}),(0,r.jsx)(t.td,{children:"Packed stock fails to get added to the container in the system. Shopify does not get update correctly"}),(0,r.jsx)(t.td,{children:"There are no free containers. Shopify API call failed"}),(0,r.jsx)(t.td,{children:"The manager should receive a notification/log of everything that\u2019s been added"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"View incoming orders"}),(0,r.jsx)(t.td,{children:"Volunteer can view a list of pending orders with accurate details"}),(0,r.jsx)(t.td,{children:"Pending orders list fails to load or shows incorrect data"}),(0,r.jsx)(t.td,{children:"Database error, server timeout, Shopify API call failure"}),(0,r.jsx)(t.td,{children:"Orders should be updated in real-time. Taken orders should be displayed on the manager log"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Scan items"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.em,{children:"Eagle"})," correctly identifies the item from the scan and the system displays which container to store the item in"]}),(0,r.jsx)(t.td,{children:"Item is unable to be identified. Item is incorrectly identified"}),(0,r.jsx)(t.td,{children:"Label not clear in photo. Item not part of database. Item lacks a label"}),(0,r.jsx)(t.td,{children:"Users should be able to manually input the item name"})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>d});var n=i(6540);const r={},s=n.createContext(r);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);